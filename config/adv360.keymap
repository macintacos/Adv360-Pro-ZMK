
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
        &kp GRAVE  &kp N1  &kp N2        &kp N3            &kp N4  &kp N5                      &tog 1         &mo 2        &kp N6        &kp N7     &kp N8        &kp N9            &kp N0     &kp BACKSLASH
        &lt 4 TAB   &kp Q   &kp W         &kp E             &kp R   &kp T                       &none         &none         &kp Y         &kp U      &kp I         &kp O             &kp P     &kp BACKSPACE
    &mt LCTRL ESC   &kp A   &kp S         &kp D             &kp F   &kp G                &kp LC(LALT)    &kp C_MUTE    &kp C_PREV                             &kp C_NEXT  &kp C_PLAY_PAUSE  &kp LC(LS(LALT))      &kp H   &kp J      &kp K    &kp L  &kp SEMI          &kp SQT
        &kp LSHFT   &kp Z   &kp X         &kp C             &kp V   &kp B                       &none         &none     &kp LCTRL         &none      &none  &kp C_VOL_UP             &none             &none      &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT ENTER
 &kp LC(LS(LALT))   &none   &none  &kp LEFT_ALT  &kp LEFT_COMMAND   &mo 3            &kp LEFT_COMMAND  &kp LEFT_ALT  &kp C_VOL_DN  &kp LEFT_ALT  &kp SPACE      &kp LEFT          &kp DOWN            &kp UP  &kp RIGHT   &mo 2
            >;
        };

        layer_keypad {
            bindings = <
  &none   &none   &none   &none   &none   &none            &none   &none   &none  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &none
  &none   &none   &none   &none   &none   &none            &none   &none   &none   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &none
 &tog 0   &none   &none   &none   &none   &none            &none   &none   &none                                    &none            &none   &none      &none  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS   &none
  &none   &none   &none   &none   &none   &none            &none   &none   &none       &none         &none          &none            &none   &none      &none  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER   &none
  &none   &none   &none   &none   &none   &mo 3            &none   &none   &none       &none         &none       &kp LEFT         &kp DOWN  &kp UP  &kp RIGHT      &none
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none        &none  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
 &tog 0         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_extras {
            bindings = <
  &none  &kp F1  &kp F2                &kp F3            &kp F4          &kp F5            &none   &none  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10   &none
  &none   &none   &none                 &none             &none           &none            &none   &none   &none   &none   &none   &none    &none   &none
 &tog 0   &none   &none  &kp LEFT_PARENTHESIS    &kp LEFT_BRACE  &kp UNDERSCORE            &none   &none   &none                   &none    &none   &none  &kp EQUAL    &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS   &none   &none   &none
  &none   &none   &none                 &none  &kp LEFT_BRACKET       &kp MINUS            &none   &none   &none   &none   &none   &none    &none   &none   &kp PLUS  &kp RIGHT_BRACKET                  &none   &none   &none   &none
  &none   &none   &none                 &none             &none           &none            &none   &none   &none   &none   &none   &none    &none   &none      &none              &none
            >;
        };

        layer_meh {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
